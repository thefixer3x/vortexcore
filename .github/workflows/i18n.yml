name: Lingo.dev i18n - VortexCore

on:
  workflow_dispatch:
  push:
    branches:
      - main-protected
      - dev-cleanup
      - feat/*
    paths:
      - 'locales/en.json'
      - 'i18n.json'
      - 'src/**'
  pull_request:
    branches:
      - main-protected
    paths:
      - 'locales/en.json'
      - 'i18n.json'

permissions:
  contents: write
  pull-requests: write

jobs:
  i18n:
    name: Generate Translations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Validate i18n configuration
        run: |
          if [[ -f "i18n.json" ]]; then
            echo "‚úÖ i18n.json found"
            bun x jq empty i18n.json
          else
            echo "‚ùå i18n.json not found"
            exit 1
          fi
      
      - name: Check source locale
        run: |
          if [[ -f "locales/en.json" ]]; then
            echo "‚úÖ Source locale found"
            key_count=$(bun x jq -r ".. | scalars" locales/en.json | wc -l)
            echo "üìä Source keys: $key_count"
          else
            echo "‚ùå Source locale not found"
            exit 1
          fi
      
      - name: Generate translations
        env:
          LINGODOTDEV_API_KEY: ${{ secrets.LINGODOTDEV_API_KEY }}
        run: |
          echo "üåê Generating translations for VortexCore platform..."
          bun x lingo.dev@latest i18n
      
      - name: Validate generated translations
        run: |
          echo "üîç Validating generated translations..."
          for lang in es fr de ja zh pt ar ko it ru; do
            if [[ -f "locales/${lang}.json" ]]; then
              if bun x jq empty "locales/${lang}.json"; then
                keys=$(bun x jq -r ".. | scalars" "locales/${lang}.json" | wc -l)
                echo "‚úÖ $lang: $keys keys"
              else
                echo "‚ùå $lang: Invalid JSON"
                exit 1
              fi
            fi
          done
      
      - name: Skip tests (translation-only workflow)
        run: echo "üìù Tests skipped - this is a translation-focused workflow"
      
      - name: Build application
        run: bun run build
      
      - name: Commit translations
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if ! git diff --quiet locales/; then
            git add locales/
            git commit -m "üåê Update translations for VortexCore platform
            
            - Generated technical translations maintaining accuracy
            - Updated privacy and security terminology
            - Auto-generated via Lingo.dev CI/CD
            
            Co-authored-by: Lingo.dev <action@lingo.dev>"
            git push
          else
            echo "No translation changes to commit"
          fi